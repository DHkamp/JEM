{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 08faf827a1d08714b1aa","webpack:///./src/jem.js","webpack:///./src/models/eventManager.model.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtCA;;AAEA,KAAM,MAAM;AACV,QADU,mBACF;AACN,YAAO,OAAP;AACD,IAHS;AAIV,OAJU,kBAIH;AACL,SAAI,IAAI,MAAM,MAAN,CAAa,UAAb,EAAyB,QAAQ,GAAjC,EAAsC,QAAQ,IAA9C,CAAR;AACD;AANS,EAAZ;;mBASe,G;;;;;;;;;;;;;;;;KCXT,Y;AACF,6BAAc;AAAA;;AACV,cAAK,OAAL,GAAe,EAAf;AACH;AACD;;;;;;;;;8BAKK,S,EAAkB;AACnB,iBAAM,OAAS,EAAf;AACA,iBAAM,SAAS,KAAK,OAAL,CAAa,SAAb,CAAf;;AAFmB,+CAAJ,EAAI;AAAJ,mBAAI;AAAA;;AAGnB,gBAAG,OAAH,CAAW,aAAK;AACZ,sBAAK,IAAL,CAAU,UAAS,IAAT,EAAe;AACrB,uBAAE,IAAF;AACA,0BAAK,QAAL,CAAc,SAAd,EAAyB,CAAzB;AACH,kBAHD;AAIH,cALD;AAMA,kBAAK,OAAL,CAAa,SAAb,IAA0B,SAAS,OAAO,MAAP,CAAc,IAAd,CAAT,GAA+B,IAAzD;AACH;AACD;;;;;;;;8BAKK,S,EAAoB;AAAA,gDAAN,IAAM;AAAN,qBAAM;AAAA;;AACrB,iBAAM,SAAS,KAAK,OAAL,CAAa,SAAb,CAAf;AACA,iBAAG,MAAH,EAAU;AACN,wBAAO,OAAP,CAAe;AAAA,4BAAK,EAAE,IAAF,CAAL;AAAA,kBAAf;AACH;AACJ;AACD;;;;;;;;4BAKG,S,EAAkB;AACjB,iBAAM,OAAS,EAAf;AACA,iBAAM,SAAS,KAAK,OAAL,CAAa,SAAb,CAAf;;AAFiB,gDAAJ,EAAI;AAAJ,mBAAI;AAAA;;AAGjB,gBAAG,OAAH,CAAW;AAAA,wBAAK,KAAK,IAAV;AAAA,cAAX;AACA,kBAAK,OAAL,CAAa,SAAb,IAA0B,SAAS,OAAO,MAAP,CAAc,IAAd,CAAT,GAA+B,IAAzD;AACH;AACD;;;;;;;;kCAKS,S,EAAkB;AACvB,iBAAM,SAAS,KAAK,OAAL,CAAa,SAAb,CAAf;AACA,iBAAG,MAAH,EAAW;AAAA,oDAFQ,EAER;AAFQ,uBAER;AAAA;;AACP,qBAAG,EAAH,EAAO;AACH,wBAAG,OAAH,CAAW,UAAC,CAAD,EAAI,CAAJ,EAAU;AACjB,6BAAI,OAAO,OAAP,CAAe,CAAf,IAAoB,CAAC,CAAzB,EAA4B;AACxB,oCAAO,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACH;AACJ,sBAJD;AAKA,0BAAK,OAAL,CAAa,SAAb,IAA0B,MAA1B;AACH,kBAPD,MAOO;AACH,4BAAO,KAAK,OAAL,CAAa,SAAb,CAAP;AACH;AACJ;AACJ;AACD;;;;;;iCAGQ;AACJ,kBAAK,MAAL,GAAc,EAAd;AACH;;;;;;SAGI,Y,GAAA,Y","file":"jem.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jem\"] = factory();\n\telse\n\t\troot[\"jem\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 08faf827a1d08714b1aa\n **/","import { EventManager } from './models/eventManager.model';\n\nconst jem = {\n  greet() {\n    return 'hello';\n  },\n  test() {\n    var e = Event.Create('testName', console.log, console.warn)\n  }\n};\n\nexport default jem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/jem.js\n **/","class EventManager {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Bounds provided functions to an event and triggers those on call. They'll be removed after the first call.\r\n     * @param  {string} eventName - Unique identifier for an event.\r\n     * @param  {Function[]} ...fn - Array of functions to be triggered.\r\n     */\r\n    Once(eventName, ...fn) {\r\n        const evts   = [];\r\n        const events = this._events[eventName];\r\n        fn.forEach(f => {\r\n            evts.push(function(args) {\r\n                f(args);\r\n                this.Dispatch(eventName, f);\r\n            })\r\n        });\r\n        this._events[eventName] = events ? events.concat(evts) : evts; \r\n    }\r\n    /**\r\n     * Calls all functions bound to the specified event.\r\n     * @param  {string} eventName - Unique identifier for the event to be called.\r\n     * @param  {Function[]} ...args - Array of functions to be triggered.\r\n     */\r\n    Emit(eventName, ...args) {\r\n        const events = this._events[eventName];\r\n        if(events){\r\n            events.forEach(e => e(args));\r\n        }\r\n    }\r\n    /**\r\n     * Bounds provided functions to an event and triggers those on call.\r\n     * @param  {string} eventName - Unique identifier for an event.\r\n     * @param  {Function[]} ...args - Array of functions to be triggered.\r\n     */\r\n    On(eventName, ...fn) {\r\n        const evts   = [];\r\n        const events = this._events[eventName];\r\n        fn.forEach(f => evts.push);\r\n        this._events[eventName] = events ? events.concat(evts) : evts; \r\n    }\r\n    /**\r\n     * Removes provied listener from the given event.\r\n     * @param  {string} eventName - Unique identifier for an event.\r\n     * @param  {Function[]} ...fn - functions to remove.\r\n     */\r\n    Dispatch(eventName, ...fn) {\r\n        const events = this._events[eventName];\r\n        if(events) {\r\n            if(fn) {\r\n                fn.forEach((f, i) => {\r\n                    if (events.indexOf(f) > -1) {\r\n                        events.splice(i, 1);\r\n                    }\r\n                });\r\n                this._events[eventName] = events;\r\n            } else {\r\n                delete this._events[eventName];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Removes all listeners.\r\n     */\r\n    Clear() {\r\n        this.events = {};\r\n    }\r\n}\r\n\r\nexport { EventManager };\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/eventManager.model.js\n **/"],"sourceRoot":""}